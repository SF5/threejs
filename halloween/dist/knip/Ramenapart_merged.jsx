/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/ramenapart_merged.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture, Center } from '@react-three/drei'
import * as THREE from 'three'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/ramenapart_merged.glb')
  const bakedTexture = useTexture('http://localhost:5173/baking.jpg')
  console.log(nodes)
  return (

    <group {...props} dispose={null}>
      <Center>
        <mesh geometry={nodes.ramen.geometry}
          material={materials['cubicity_glass-emit']} 
          emissiveMap={bakedTexture}
          material-color="red"
          emissiveIntensity={1}
          position={[-6.312, 0, 0]} > <shaderMaterial /></mesh>
        <mesh geometry={nodes.gekleurdglas.geometry}
          material={materials['cubicity_glass-emit']} 
          emissiveMap={bakedTexture}
          emissiveIntensity={1}
          material-color="pink"
        />
        <mesh geometry={nodes.Moon.geometry}
       material={materials['Material.002']}
       material-color="pink"
       position={[-5.902, 3.945, -28.695]} rotation={[Math.PI / 2, 0, 0]} />

        <mesh geometry={nodes.baked_1.geometry}
           material={materials} 
          map={bakedTexture}/>
        <mesh geometry={nodes.baked_2.geometry} 
        material={materials.cubicity_painted}
        material-color="black"
        map={bakedTexture}/> 
        <mesh geometry={nodes.baked_3.geometry} 
        material={materials.cubicity_brick} 
        material-color="brown"
         />
        <mesh geometry={nodes.baked_4.geometry}
         material={materials['Material.003']} 
         material-color="white"
         map={bakedTexture}/>
        <mesh geometry={nodes.baked_5.geometry} material={materials['Material.001']} 
          material-color="white" map={bakedTexture}/>
        <mesh geometry={nodes.baked_6.geometry} material={materials['Material.004']} 
         material-color="white"  map={bakedTexture}/>
        <mesh geometry={nodes.baked_7.geometry} material={materials['cubicity_concrete.001']} 
         material-color="white"  map={bakedTexture}/>
        <mesh geometry={nodes.baked_8.geometry} material={materials['procedural dirty metal']} 
         material-color="white"  map={bakedTexture}/>
        <mesh geometry={nodes.baked_9.geometry} material={materials['cubicity_tree-leaves']} 
        material-color="white"   map={bakedTexture}/>
        <mesh geometry={nodes.baked_10.geometry} material={materials.mossy_stone_wall} 
        material-color="white"   map={bakedTexture}/>
        <mesh geometry={nodes.baked_11.geometry} material={materials.cubicity_dirt} 
       material-color="white"    map={bakedTexture}/>
        <mesh geometry={nodes.baked_12.geometry} material={materials['Material.008']} 
        material-color="white"   map={bakedTexture}/>
        <mesh geometry={nodes.baked_13.geometry} material={materials['cubicty_roof-tiles_A.001']} 
          map={bakedTexture}/>
        <mesh geometry={nodes.baked_14.geometry} material={materials['cubicty_roof-tiles_A']} 
        material-color="white"   map={bakedTexture}/>
        <mesh geometry={nodes.baked_15.geometry} material={materials.skeletonwhite} 
        material-color="white"  map={bakedTexture}/>
      </Center>
    </group>
  )
}
useGLTF.preload('/ramenapart_merged.glb')
