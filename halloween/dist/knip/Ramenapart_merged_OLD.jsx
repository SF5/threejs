/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/ramenapart_merged.glb 
*/

import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import * as THREE from 'three'
import { TextureLoader } from 'three/src/loaders/TextureLoader'
import { useLoader } from '@react-three/fiber'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/ramenapart_merged.glb')
  const bakedTexture = useTexture('./baking.jpg')
  
  const colorMap = useLoader(TextureLoader, 'http://localhost:5173/baking.jpg')
  return (
    <group {...props} dispose={null}>
      <group position={[-40.481, 0, 0]}>
        <mesh
          geometry={nodes.baked_1.geometry}
          material={materials.cubicity_concrete}
          map={colorMap} />
        <mesh geometry={nodes.baked_2.geometry}
          material={materials.cubicity_painted}
        />
        <mesh geometry={nodes.baked_3.geometry}
          material={materials.cubicity_brick}
          map={bakedTexture} />


        <mesh geometry={nodes.baked_4.geometry}
          material={materials['Material.003']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_5.geometry}
          material={materials['Material.001']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_6.geometry}
          material={materials['Material.004']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_7.geometry}
          material={materials['cubicity_concrete.001']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_8.geometry}
          material={materials['procedural dirty metal']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_9.geometry}
          material={materials['cubicity_tree-leaves']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_10.geometry}
          material={materials.mossy_stone_wall
          } map={bakedTexture} />
        <mesh geometry={nodes.baked_11.geometry}
           material={materials.cubicity_dirt}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_12.geometry}
          material={materials['Material.008']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_13.geometry}
          material={materials['cubicty_roof-tiles_A.001']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_14.geometry}
          material={materials['cubicty_roof-tiles_A']}
          map={bakedTexture} />
        <mesh geometry={nodes.baked_15.geometry}
          material={materials.skeletonwhite} map={bakedTexture} />
      </group>
      <mesh geometry={nodes.ramen.geometry}
        //material={materials['cubicity_glass-emit']} 
        material={new THREE.MeshBasicMaterial()}
        material-color="#ffffe5"
        position={[0, 0, 0]}
      />

      <mesh geometry={nodes.gekleurdglas.geometry}
        // material={materials['cubicity_glass-emit']}
        material={new THREE.MeshBasicMaterial()}
        material-color="red" />

      <mesh geometry={nodes.Moon.geometry}
        material={new THREE.MeshBasicMaterial()}
        material-color="#ffffe5"
        position={[0, 3.945, -28.695]}
        rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/ramenapart_merged.glb')
